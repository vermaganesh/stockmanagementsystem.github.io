{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ng2-google-charts/src/lib/google-charts-loader.service.ts","../../../projects/ng2-google-charts/src/lib/google-charts-datatable.ts","../../../projects/ng2-google-charts/src/lib/google-chart/chart-html-tooltip.ts","../../../projects/ng2-google-charts/src/lib/google-chart/google-chart.component.ts","../../../projects/ng2-google-charts/src/lib/google-charts-dashboard/google-charts-dashboard.component.ts","../../../projects/ng2-google-charts/src/lib/google-charts-control/google-charts-control.component.ts","../../../projects/ng2-google-charts/src/lib/ng2-google-charts.module.ts","../../../projects/ng2-google-charts/src/lib/google-chart-editor.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","__values","o","m","GoogleChartsLoaderService","localeId","googleChartsSettings","_this","googleScriptLoadingNotifier","EventEmitter","googleScriptIsLoading","loadGoogleChartsScriptPromise","google","charts","subscribe","loaded","script","document","createElement","type","src","async","defer","onload","emit","onerror","getElementsByTagName","appendChild","prototype","load","settings","_a","create","language","googleChartsVersion","_settings","callback","Injectable","providedIn","Inject","LOCALE_ID","Optional","GoogleChartsDataTable","opt","dataTableChanged","_setDataTable","dataTable","firstRowIsData","send","undefined","query","queryResponse","setDataTable","getDataTable","queryCallback","init","tid","window","clearInterval","dataSourceUrl","visualization","Query","setQuery","timeout","setTimeout","refreshInterval","setInterval","dt","Array","isArray","arrayToDataTable","reformat","formatters","_d","_e","formatterConfig","formatter","formatterConstructor","formatterOptions","options","fmtOptions","_f","e_2","ranges","_g","range","addGradientRange","from","to","color","fromBgColor","toBgColor","addRange","bgcolor","_h","e_3","columns","_j","col","format","PatternFormat","pattern","dstColumnIndex","Output","ChartHTMLTooltip","el","setPosition","x","nativeElement","style","left","PIXELS","top","getDOMElement","GoogleChartComponent","loaderService","mouseOverListener","item","event","parseMouseEvent","tooltip","getHTMLTooltip","mouseOutListener","selectListener","message","row","column","selectedRowValues","selectedRowFormattedValues","columnLabel","s","wrapper","getSelection","gs","selection","numberOfColumns","getNumberOfColumns","getValue","getFormattedValue","getColumnLabelAtPosition","name","chartSelect","chartSelectOneTime","chartReady","chartReadyOneTime","chartError","chartErrorOneTime","mouseOver","mouseOverOneTime","mouseOut","mouseOutOneTime","regionClick","regionClickOneTime","ngOnInit","HTMLel","querySelector","isExtensible","data","component","draw","recreateWrapper","getChartType","chartType","_draw","temp","assign","ChartWrapper","registerChartWrapperEvents","err","convertOptions","setOptions","getSelectorBySeriesType","seriesType","bars","haxis","line","legend","area","getSeriesByColumn","series","role","getColumnRole","getColumnType","getBoundingBoxForItem","boundingBox","width","height","cli","selector","replace","box","getBoundingBox","getValueAtPosition","position","getColumnTypeAtPosition","getColumnLabel","tooltipER","ElementRef","eventColumn","myItem","columnType","unregisterEvents","events","removeAllListeners","getChart","registerChartEvents","chart","getChartLayoutInterface","observers","addListener","addOneTimeListener","error","source","eventType","listenerFn","evEmitter","Input","Component","template","GoogleChartsDashboardComponent","packages","dashboard","Dashboard","bind","_b","b","controls","e_1","controls_1","controls_1_1","ensureInit","charts_1","charts_1_1","Error","map","GoogleChartsControlComponent","containerId","ControlWrapper","Ng2GoogleChartsModule","NgModule","declarations","providers","exports","GoogleChartEditor","createEditor","chartEditor","ChartEditor","getChartWrapper","comp","getOptions","openDialog","isComponent"],"mappings":";;;;;;;;;;;;;;6FAoDgBA,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HC,EAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,EACrH,GAAuB,iBAAZQ,SAAoD,mBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIU,EAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,GAChJ,OAAOH,EAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,WAGhDO,EAAQC,EAAYC,GAChC,OAAO,SAAUhB,EAAQC,GAAOe,EAAUhB,EAAQC,EAAKc,aAG3CE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZT,SAAoD,mBAArBA,QAAQU,SAAyB,OAAOV,QAAQU,SAASF,EAAaC,YAGpGE,EAAUC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,GAAE,SAAUG,GAAWA,EAAQQ,EAAOL,UAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,oBAItDO,EAAYjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAGC,EAAGC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOK,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEZ,KAAMkB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOC,OAAUX,EACvJ,SAASM,EAAKM,GAAK,OAAO,SAAUC,GAAK,OACzC,SAAcC,GACV,GAAIjB,EAAG,MAAM,IAAIkB,UAAU,mCAC3B,KAAOd,GAAG,IACN,GAAIJ,EAAI,EAAGC,IAAMC,EAAY,EAARe,EAAG,GAAShB,EAAU,OAAIgB,EAAG,GAAKhB,EAAS,SAAOC,EAAID,EAAU,SAAMC,EAAEiB,KAAKlB,GAAI,GAAKA,EAAEV,SAAWW,EAAIA,EAAEiB,KAAKlB,EAAGgB,EAAG,KAAKtB,KAAM,OAAOO,EAE3J,OADID,EAAI,EAAGC,IAAGe,EAAK,CAAS,EAARA,EAAG,GAAQf,EAAEb,QACzB4B,EAAG,IACP,KAAK,EAAG,KAAK,EAAGf,EAAIe,EAAI,MACxB,KAAK,EAAc,OAAXb,EAAEC,QAAgB,CAAEhB,MAAO4B,EAAG,GAAItB,MAAM,GAChD,KAAK,EAAGS,EAAEC,QAASJ,EAAIgB,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKb,EAAEI,IAAIY,MAAOhB,EAAEG,KAAKa,MAAO,SACxC,QACI,KAAkBlB,GAAZA,EAAIE,EAAEG,MAAY1C,OAAS,GAAKqC,EAAEA,EAAErC,OAAS,MAAkB,IAAVoD,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEb,EAAI,EAAG,SACjG,GAAc,IAAVa,EAAG,MAAcf,GAAMe,EAAG,GAAKf,EAAE,IAAMe,EAAG,GAAKf,EAAE,IAAM,CAAEE,EAAEC,MAAQY,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYb,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIA,EAAIe,EAAI,MAC7D,GAAIf,GAAKE,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIE,EAAEI,IAAIa,KAAKJ,GAAK,MACvDf,EAAE,IAAIE,EAAEI,IAAIY,MAChBhB,EAAEG,KAAKa,MAAO,SAEtBH,EAAKlB,EAAKoB,KAAKtC,EAASuB,GAC1B,MAAOZ,GAAKyB,EAAK,CAAC,EAAGzB,GAAIS,EAAI,UAAeD,EAAIE,EAAI,EACtD,GAAY,EAARe,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE5B,MAAO4B,EAAG,GAAKA,EAAG,QAAK,EAAQtB,MAAM,GArB9BL,CAAK,CAACyB,EAAGC,eA6B7CM,EAASC,GACrB,IAAIC,EAAsB,mBAAXZ,QAAyBW,EAAEX,OAAOC,UAAW1C,EAAI,EAChE,OAAIqD,EAAUA,EAAEL,KAAKI,GACd,CACHhC,KAAM,WAEF,OADIgC,GAAKpD,GAAKoD,EAAE1D,SAAQ0D,OAAI,GACrB,CAAElC,MAAOkC,GAAKA,EAAEpD,KAAMwB,MAAO4B,KCtGnCE,EAAAA,0BAAyB,WAOpC,SAAAA,EACqBC,EACiCC,GAFtD,IAAAC,EAAAd,KAEsDA,KAAAa,qBAAAA,EAEpDb,KAAKe,4BAA8B,IAAIC,EAAAA,aACvChB,KAAKiB,uBAAwB,EAC7BjB,KAAKY,SAAWA,EAEhBZ,KAAKkB,8BAAgC,IAAI/C,SAAQ,SAACC,EAASC,GACzD,GAAsB,oBAAX8C,QAA0BA,OAAOC,OAC1ChD,SACK,GAAK0C,EAAKG,sBAsBfH,EAAKC,4BAA4BM,WAAU,SAACC,GACtCA,EACFlD,IAEAC,WA1BkC,CAEtCyC,EAAKG,uBAAwB,EAE7B,IAAMM,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,kBACdH,EAAOI,IAAM,2CACbJ,EAAOK,OAAQ,EACfL,EAAOM,OAAQ,EACfN,EAAOO,OAAS,WACdhB,EAAKG,uBAAwB,EAC7BH,EAAKC,4BAA4BgB,MAAK,GACtC3D,KAEFmD,EAAOS,QAAU,WACflB,EAAKG,uBAAwB,EAC7BH,EAAKC,4BAA4BgB,MAAK,GACtC1D,KAEFmD,SAASS,qBAAqB,QAAQ,GAAGC,YAAYX,cAc9CZ,EAAAwB,UAAAC,KAAA,SAAKC,wGAChB,MAAA,CAAA,EAAMrC,KAAKkB,sCAEX,OAFAoB,EAAA9C,OAEA,CAAA,EAAM,IAAIrB,SAAQ,SAACC,GACZiE,IACHA,EAAWpF,OAAOsF,OAAOzB,EAAKD,uBAE3BwB,IACHA,EAAW,IAGRA,EAASG,WACZH,EAASG,SAAW1B,EAAKF,UAGtByB,EAASI,sBACZJ,EAASI,oBAAsB,MAGjC,IAAMC,EAA0CL,EAChDK,EAAUC,SAAWvE,EAErB+C,OAAOC,OAAOgB,KAAKC,EAASI,oBAAqBC,qBAnBnDJ,EAAA9C,qBAtDkC,0OAAzBmB,EAAAA,0BAAyBpE,EAAA,CAHrCqG,EAAAA,WAAW,CACVC,WAAY,SAUTtF,EAAA,EAAAuF,EAAAA,OAAOC,EAAAA,YACPxF,EAAA,EAAAuF,EAAAA,OAAO,yBAAyBvF,EAAA,EAAAyF,EAAAA,oDATxBrC,EAAAA,2BC+Eb,IAAAsC,EAAA,WAOE,SAAAA,EAAoBC,GAAAlD,KAAAkD,IAAAA,EAFVlD,KAAAmD,iBAAsC,IAAInC,EAAAA,aAG9CkC,GACFlD,KAAKoD,cAAcF,EAAIG,UAAWH,EAAII,uBAIlCL,EAAAd,UAAAoB,KAAA,WAAA,IAAAzC,EAAAd,UACawD,IAAfxD,KAAKyD,OAGTzD,KAAKyD,MAAMF,MAAK,SAACG,GACf5C,EAAK6C,aAAaD,EAAcE,gBAC5B9C,EAAKoC,IAAIW,eACX/C,EAAKoC,IAAIW,cAAcH,OAKtBT,EAAAd,UAAA2B,KAAA,SAAKZ,GAAL,IAAApC,EAAAd,KACDkD,IACFlD,KAAKkD,IAAMA,QAGIM,IAAbxD,KAAK+D,MAGPC,OAAOC,cAAcjE,KAAK+D,KAC1B/D,KAAK+D,SAAMP,GAGTxD,KAAKkD,IAAIgB,eACXlE,KAAKyD,MAAQ,IAAItC,OAAOgD,cAAcC,MAAMpE,KAAKkD,IAAIgB,eACjDlE,KAAKkD,IAAIO,OACXzD,KAAKyD,MAAMY,SAASrE,KAAKkD,IAAIO,YAEND,IAArBxD,KAAKkD,IAAIoB,SACXtE,KAAKyD,MAAMc,WAAWvE,KAAKkD,IAAIoB,SAE7BtE,KAAKkD,IAAIsB,kBAEXxE,KAAK+D,IAAMC,OAAOS,aAAY,WAC5B3D,EAAKyC,SACuB,IAA3BvD,KAAKkD,IAAIsB,kBAEdxE,KAAKuD,QAELvD,KAAK2D,aAAa3D,KAAKkD,IAAIG,YAQxBJ,EAAAd,UAAAyB,aAAA,WACL,OAAO5D,KAAKqD,WAGPJ,EAAAd,UAAAwB,aAAA,SAAae,EAASpB,QACJE,IAAnBF,IACFA,EAAiBtD,KAAKkD,IAAII,gBAE5BtD,KAAKoD,cAAcsB,EAAIpB,GACvBtD,KAAKmD,iBAAiBpB,KAAK/B,KAAKqD,YAG1BJ,EAAAd,UAAAiB,cAAA,SAAcsB,EAASpB,GACzBqB,MAAMC,QAAQF,KAChBA,EAAKvD,OAAOgD,cAAcU,iBAAiBH,EAAIpB,IAEjDtD,KAAKqD,UAAYqB,EACjB1E,KAAK8E,YAOA7B,EAAAd,UAAA2C,SAAA,2BACCJ,EAAK1E,KAAKqD,UAChB,QAAWG,IAAPkB,QAIwBlB,IAAxBxD,KAAKkD,IAAI6B,eAIb,IAA8B,IAAAC,EAAAxE,EAAAR,KAAKkD,IAAI6B,YAAUE,EAAAD,EAAAvG,QAAAwG,EAAApG,KAAAoG,EAAAD,EAAAvG,OAAE,CAA9C,IAAMyG,EAAeD,EAAA1G,MACpB4G,OAAc,EAClB,GAA6B,kBAAzBD,EAAgBxD,KAApB,CAOA,IAAM0D,EAAuBjE,OAAOgD,cAAce,EAAgBxD,MAC5D2D,EAAmBH,EAAgBI,QAEzC,GADAH,EAAY,IAAIC,EAAqBC,GACR,gBAAzBH,EAAgBxD,MAA0B2D,EAAkB,CACxDE,EAAaF,MACnB,IAAoB,IAAAG,GAAAC,OAAA,EAAAjF,EAAA+E,EAAWG,SAAMC,EAAAH,EAAA/G,QAAAkH,EAAA9G,KAAA8G,EAAAH,EAAA/G,OAAE,CAAlC,IAAMmH,EAAKD,EAAApH,WACqB,IAAvBqH,EAAiB,kBACO,IAArBA,EAAe,UAC5BT,EAAUU,iBAAiBD,EAAME,KAAMF,EAAMG,GAC3CH,EAAMI,MAAOJ,EAAMK,YAAaL,EAAMM,WAExCf,EAAUgB,SAASP,EAAME,KAAMF,EAAMG,GAAIH,EAAMI,MAAOJ,EAAMQ,gHAKlE,IAAkB,IAAAC,GAAAC,OAAA,EAAA9F,EAAA0E,EAAgBqB,UAAOC,EAAAH,EAAA5H,QAAA+H,EAAA3H,KAAA2H,EAAAH,EAAA5H,OAAE,CAAtC,IAAMgI,EAAGD,EAAAjI,MACZ4G,EAAUuB,OAAOhC,EAAI+B,0GAxBvB,CACE,IAAMlB,EAAaL,EAAgBI,SACnCH,EAAY,IAAIhE,OAAOgD,cAAcwC,cAAcpB,EAAWqB,UACpDF,OAAOhC,EAAIQ,EAAgBqB,QAAShB,EAAWsB,uHApGjE,GAKYtK,EAAA,CAATuK,EAAAA,yBAA2B9F,EAAAA,uECzF5B,SAAA+F,EAA2BC,GAAAhH,KAAAgH,GAAAA,SAEpBD,EAAA5E,UAAA8E,YAAA,SAAYC,EAAW/H,GAC5Ba,KAAKgH,GAAGG,cAAcC,MAAMC,KAAOH,EAAIH,EAAiBO,OACxDtH,KAAKgH,GAAGG,cAAcC,MAAMG,IAAMpI,EAAI4H,EAAiBO,QAGlDP,EAAA5E,UAAAqF,cAAA,WACL,OAAOxH,KAAKgH,SAVSD,EAAAO,OAAiB,KCgC7BG,EAAAA,qBAAoB,WA6B/B,SAAAA,EAA2BT,EACAU,GAD3B,IAAA5G,EAAAd,KAA2BA,KAAAgH,GAAAA,EACAhH,KAAA0H,cAAAA,EAwRnB1H,KAAA2H,kBAAoB,SAACC,GAC3B,IAAMC,EAA6B/G,EAAKgH,gBAAgBF,GAExD,OADAC,EAAME,QAAUjH,EAAKkH,iBACdH,GAGD7H,KAAAiI,iBAAmB,SAACL,GAE1B,OADkC9G,EAAKgH,gBAAgBF,IAIjD5H,KAAAkI,eAAiB,WACvB,IAAML,EAA0B,CAC9BM,QAAS,SACTC,IAAK,KACLC,OAAQ,KACRC,kBAAmB,GACnBC,2BAA4B,GAC5BC,YAAa,IAETC,EAAI3H,EAAK4H,QAAQvE,cAAcwE,eAC/BC,EAAKH,EAAEA,EAAE1L,OAAS,GACxB,IAAK6L,EAEH,OADAf,EAAMM,QAAU,WACTN,EAET,IAAMgB,EAA+BD,EACrC,GAAc,MAAVA,EAAGR,IAAa,CAClBP,EAAMO,IAAMS,EAAUT,IAMtB,IAJA,IAAME,EAAoB,GACpBC,EAA6B,GAC7BlF,EAAYvC,EAAK4H,QAAQ9E,eACzBkF,EAAkBzF,EAAU0F,qBACzB1L,EAAI,EAAGA,EAAIyL,EAAiBzL,IACnCiL,EAAkB/H,KAAK8C,EAAU2F,SAASH,EAAUT,IAAK/K,IACzDkL,EAA2BhI,KAAK8C,EAAU4F,kBAAkBJ,EAAUT,IAAK/K,IAE7EwK,EAAMS,kBAAoBA,EAC1BT,EAAMU,2BAA6BA,EAUrC,OARwB,MAApBM,EAAUR,SACZR,EAAMQ,OAASQ,EAAUR,OACzBR,EAAMW,YAAc1H,EAAKoI,yBAAyBL,IAEhDD,EAAGO,OACLtB,EAAMW,YAAcI,EAAGO,MAGlBtB,GAxUP7H,KAAKoJ,YAAc,IAAIpI,EAAAA,aACvBhB,KAAKqJ,mBAAqB,IAAIrI,EAAAA,aAC9BhB,KAAKsJ,WAAa,IAAItI,EAAAA,aACtBhB,KAAKuJ,kBAAoB,IAAIvI,EAAAA,aAC7BhB,KAAKwJ,WAAa,IAAIxI,EAAAA,aACtBhB,KAAKyJ,kBAAoB,IAAIzI,EAAAA,aAC7BhB,KAAK0J,UAAY,IAAI1I,EAAAA,aACrBhB,KAAK2J,iBAAmB,IAAI3I,EAAAA,aAC5BhB,KAAK4J,SAAW,IAAI5I,EAAAA,aACpBhB,KAAK6J,gBAAkB,IAAI7I,EAAAA,aAC3BhB,KAAK8J,YAAc,IAAI9I,EAAAA,aACvBhB,KAAK+J,mBAAqB,IAAI/I,EAAAA,oBAGzByG,EAAAtF,UAAA6H,SAAA,WAAA,IAAAlJ,EAAAd,KACLA,KAAKiK,OAASjK,KAAKgH,GAAGG,cAAc+C,cAAc,OAC9CjN,OAAOkN,aAAanK,KAAKoK,QAC3BpK,KAAKoK,KAAKC,UAAYrK,MAExBA,KAAKsF,QAAUtF,KAAKoK,KAAK9E,QAEzBtF,KAAK8D,OAAOhF,MAAK,WACfgC,EAAKwJ,WAII7C,EAAAtF,UAAA2B,KAAA,qGACX,MAAA,CAAA,EAAM9D,KAAK0H,cAActF,sBAAzBE,EAAA9C,OACAQ,KAAKuK,8BAGC9C,EAAAtF,UAAAoI,gBAAA,WAAA,IAAAzJ,EAAAd,KACN,QAAqBwD,IAAjBxD,KAAK0I,SAAyB1I,KAAK0I,QAAQ8B,iBAAmBxK,KAAKoK,KAAKK,UAAW,CACrFzK,KAAKqD,UAAY,IAAIJ,EAAsBjD,KAAKoK,MAChDpK,KAAKqD,UAAUF,iBAAiB9B,WAAU,SAACqD,GACzC5D,EAAK4J,WAIP,IAAIC,EAA6B3K,KAAKoK,KAWtC,GAVIpK,KAAKoK,KAAK9G,kBACZqH,EAAO1N,OAAO2N,OAAOD,EAAM3K,KAAKoK,OAC3B/G,UAAYrD,KAAKqD,UAAUO,gBAElC5D,KAAK0I,QAAU,IAAIvH,OAAOgD,cAAc0G,aAAaF,GACrD3K,KAAK8K,kCAKkBtH,IAAnBmH,EAAKtH,gBAAkDG,IAAvBmH,EAAKzG,cACvC,IACElE,KAAK0I,QAAQ4B,KAAKtK,KAAKiK,QACvB,MAAOc,OAKDtD,EAAAtF,UAAAuI,MAAA,oFAEZ,YAAWlH,KADLkB,EAAK1E,KAAKqD,UAAUO,gBAExB,CAAA,IAEF5D,KAAKgL,iBACLhL,KAAKuK,kBACLvK,KAAK0I,QAAQuC,WAAWjL,KAAKsF,SAC7BtF,KAAK0I,QAAQ/E,aAAae,GAC1B1E,KAAK0I,QAAQ4B,KAAKtK,KAAKiK,oBAGlBxC,EAAAtF,UAAAyB,aAAA,WACL,OAAO5D,KAAKqD,WAGPoE,EAAAtF,UAAAmI,KAAA,SAAK/L,QACIiF,IAAVjF,IACFA,EAAQyB,KAAKoK,MAEfpK,KAAKsF,QAAU/G,EAAM+G,QACrBtF,KAAKqD,UAAUS,KAAKvF,IAGdkJ,EAAAtF,UAAA+I,wBAAA,SAAwBC,GAW9B,MAVuB,CACrBC,KAAO,YACPC,MAAQ,gBACRC,KAAM,cACNC,OAAS,iBACTC,KAAM,eAG2BL,IAY7B1D,EAAAtF,UAAAsJ,kBAAA,SAAkBpD,GAGxB,IAFA,IAAIqD,EAAS,EACPrI,EAAYrD,KAAK0I,QAAQ9E,eACtBvG,EAAIgL,EAAS,EAAGhL,GAAK,EAAGA,IAAK,CACpC,IAAMsO,EAAOtI,EAAUuI,cAAcvO,GAC/BqE,EAAO2B,EAAUwI,cAAcxO,GACxB,SAATsO,GAA4B,WAATjK,GACrBgK,IAGJ,OAAOA,GAGDjE,EAAAtF,UAAA2J,sBAAA,SAAsBlE,GAC5B,IAAImE,EAAc,CAACxE,IAAK,EAAGF,KAAM,EAAG2E,MAAO,EAAGC,OAAQ,GACtD,GAAIjM,KAAKkM,IAAK,CACZ,IAAM7D,EAAST,EAAKS,OACdqD,EAAS1L,KAAKyL,kBAAkBpD,GAChCD,EAAMR,EAAKQ,IACb+C,EAAanL,KAAKsF,QAAQ6F,WAI9B,GAHInL,KAAKsF,QAAQoG,QAAU1L,KAAKsF,QAAQoG,OAAOA,IAAW1L,KAAKsF,QAAQoG,OAAOA,GAAQhK,OACpFyJ,EAAanL,KAAKsF,QAAQoG,OAAOA,GAAQhK,MAEvCyJ,EAAY,CACd,IAAIgB,EAAWnM,KAAKkL,wBAAwBC,GAC5C,GAAIgB,EAAU,CACTA,EAAWA,EAASC,QAAQ,KAAMV,EAAS,IAAIU,QAAQ,KAAM/D,EAAS,IAAI+D,QAAQ,KAAMhE,EAAM,IAC9F,IAAMiE,EAAMrM,KAAKkM,IAAII,eAAeH,GAChCE,IACHN,EAAcM,KAMxB,OAAON,GAGDtE,EAAAtF,UAAAoK,mBAAA,SAAmBC,GACzB,OAAoB,MAAhBA,EAASpE,IACJ,KAESpI,KAAK0I,QAAQ9E,eACPoF,SAASwD,EAASpE,IAAKoE,EAASnE,SAIlDZ,EAAAtF,UAAAsK,wBAAA,SAAwBD,GAG5B,OAFkBxM,KAAK0I,QAAQ9E,eACRiI,cAAcW,EAASnE,SAAW,IAIrDZ,EAAAtF,UAAA+G,yBAAA,SAAyBsD,GAG7B,OAFkBxM,KAAK0I,QAAQ9E,eACR8I,eAAeF,EAASnE,SAAW,IAItDZ,EAAAtF,UAAA6F,eAAA,WACN,IAAM2E,EAAY,IAAIC,EAAAA,WAAW5M,KAAKgH,GAAGG,cAAc+C,cAAc,kCACrE,OAAO,IAAInD,EAAiB4F,IAGtBlF,EAAAtF,UAAA2F,gBAAA,SAAgBF,GACtB,IAAM6C,EAAYzK,KAAK0I,QAAQ8B,eAC3BqC,EAAcjF,EAAKS,OACvB,GAAmB,MAAfwE,EACF,OAAQpC,GACN,IAAK,WACHoC,EAAmE,IAArD7M,KAAK0I,QAAQ9E,eAAemF,qBAA6B,EAAI,EAC3E,MACF,QACE8D,EAAc,EAGpB,IACMC,EAAS,CACb1E,IAFeR,EAAKQ,IAGpBC,OAAQwE,GASV,MAPc,CACZL,SAAU5E,EACVmE,YAAa/L,KAAK8L,sBAAsBgB,GACxCvO,MAAOyB,KAAKuM,mBAAmBO,GAC/BC,WAAY/M,KAAKyM,wBAAwBK,GACzCtE,YAAaxI,KAAKkJ,yBAAyB4D,KAKvCrF,EAAAtF,UAAA6K,iBAAA,WACN7L,OAAOgD,cAAc8I,OAAOC,mBAAmBlN,KAAK0I,QAAQyE,YAC5DhM,OAAOgD,cAAc8I,OAAOC,mBAAmBlN,KAAK0I,UAG9CjB,EAAAtF,UAAAiL,oBAAA,WAAA,IAAAtM,EAAAd,KACAqN,EAAQrN,KAAK0I,QAAQyE,WAC3BnN,KAAKkM,IAAMmB,EAAMC,wBAA0BD,EAAMC,0BAA4B,KACzEtN,KAAK0J,UAAU6D,UAAUxQ,OAAS,GACpCoE,OAAOgD,cAAc8I,OAAOO,YAAYH,EAAO,eAAe,SAACzF,GAC7D,IAAMC,EAA6B/G,EAAKgH,gBAAgBF,GACxDC,EAAME,QAAUjH,EAAKkH,iBACrBlH,EAAK4I,UAAU3H,KAAK8F,MAGpB7H,KAAK2J,iBAAiB4D,UAAUxQ,OAAS,GAC3CoE,OAAOgD,cAAc8I,OAAOQ,mBAAmBJ,EAAO,eAAe,SAACzF,GACpE,IAAMC,EAA6B/G,EAAKgH,gBAAgBF,GACxDC,EAAME,QAAUjH,EAAKkH,iBACrBlH,EAAK6I,iBAAiB5H,KAAK8F,MAI3B7H,KAAK4J,SAAS2D,UAAUxQ,OAAS,GACnCoE,OAAOgD,cAAc8I,OAAOO,YAAYH,EAAO,cAAc,SAACzF,GAC5D,IAAMC,EAA4B/G,EAAKgH,gBAAgBF,GACvD9G,EAAK8I,SAAS7H,KAAK8F,MAInB7H,KAAK6J,gBAAgB0D,UAAUxQ,OAAS,GAC1CoE,OAAOgD,cAAc8I,OAAOQ,mBAAmBJ,EAAO,cAAc,SAACzF,GACnE,IAAMC,EAA4B/G,EAAKgH,gBAAgBF,GACvD9G,EAAK+I,gBAAgB9H,KAAK8F,MAIF,aAAxB7H,KAAKoK,KAAKK,YACRzK,KAAK8J,YAAYyD,UAAUxQ,OAAS,GACtCoE,OAAOgD,cAAc8I,OAAOO,YAAYH,EAAO,eAAe,SAACzF,GAC7D9G,EAAKgJ,YAAY/H,KAAK6F,MAGtB5H,KAAK+J,mBAAmBwD,UAAUxQ,OAAS,GAC7CoE,OAAOgD,cAAc8I,OAAOQ,mBAAmBJ,EAAO,eAAe,SAACzF,GACpE9G,EAAKgJ,YAAY/H,KAAK6F,QAMtBH,EAAAtF,UAAA2I,2BAAA,WAAA,IAAAhK,EAAAd,KACNmB,OAAOgD,cAAc8I,OAAOO,YAAYxN,KAAK0I,QAAS,SAAS,WAC7D5H,EAAKwI,WAAWvH,KAAK,CAACoG,QAAS,mBAGjChH,OAAOgD,cAAc8I,OAAOQ,mBAAmBzN,KAAK0I,QAAS,SAAS,WACpE5H,EAAKyI,kBAAkBxH,KAAK,CAACoG,QAAS,2BACtCrH,EAAKsM,yBAGPjM,OAAOgD,cAAc8I,OAAOO,YAAYxN,KAAK0I,QAAS,SAAS,SAACgF,GAC9D5M,EAAK0I,WAAWzH,KAAK2L,MAGvBvM,OAAOgD,cAAc8I,OAAOQ,mBAAmBzN,KAAK0I,QAAS,SAAS,SAACgF,GACrE5M,EAAK2I,kBAAkB1H,KAAK2L,MAG9B1N,KAAKwN,YAAYxN,KAAK0I,QAAS,SAAU1I,KAAKkI,eAAgBlI,KAAKoJ,aACnEpJ,KAAKyN,mBAAmBzN,KAAK0I,QAAS,SAAU1I,KAAKkI,eAAgBlI,KAAKqJ,qBAGpE5B,EAAAtF,UAAAqL,YAAA,SAAYG,EAAaC,EAAmBC,EAAiBC,GACnE3M,OAAOgD,cAAc8I,OAAOO,YAAYG,EAAQC,GAAW,WACzDE,EAAU/L,KAAK8L,SAIXpG,EAAAtF,UAAAsL,mBAAA,SAAmBE,EAAaC,EAAmBC,EAAiBC,GAC1E3M,OAAOgD,cAAc8I,OAAOQ,mBAAmBE,EAAQC,GAAW,WAChEE,EAAU/L,KAAK8L,SAwDXpG,EAAAtF,UAAA6I,eAAA,WACN,IACEhL,KAAKsF,QAAUnE,OAAOC,OAAOpB,KAAKoK,KAAKK,WAAWO,eAAehL,KAAKsF,SACtE,MAAOoI,GACP,WA9W2B,GAEtBnR,EAAA,CAARwR,EAAAA,iFAESxR,EAAA,CAATuK,EAAAA,yBAA4B9F,EAAAA,qEACnBzE,EAAA,CAATuK,EAAAA,yBAAmC9F,EAAAA,4EAE1BzE,EAAA,CAATuK,EAAAA,yBAA4B9F,EAAAA,qEACnBzE,EAAA,CAATuK,EAAAA,yBAAmC9F,EAAAA,4EAE1BzE,EAAA,CAATuK,EAAAA,yBAA6B9F,EAAAA,sEACpBzE,EAAA,CAATuK,EAAAA,yBAAoC9F,EAAAA,6EAE3BzE,EAAA,CAATuK,EAAAA,yBAA2B9F,EAAAA,oEAClBzE,EAAA,CAATuK,EAAAA,yBAAkC9F,EAAAA,2EAEzBzE,EAAA,CAATuK,EAAAA,yBAA0B9F,EAAAA,mEACjBzE,EAAA,CAATuK,EAAAA,yBAAiC9F,EAAAA,0EAExBzE,EAAA,CAATuK,EAAAA,yBAA6B9F,EAAAA,sEACpBzE,EAAA,CAATuK,EAAAA,yBAAoC9F,EAAAA,6EApB1ByG,EAAAA,qBAAoBlL,EAAA,CAJhCyR,EAAAA,UAAU,CACT7B,SAAU,eACV8B,SAAU,uCA+BqBrB,EAAAA,WACWjM,EAAAA,6BA9B/B8G,EAAAA,sBCTAyG,EAAAA,+BAA8B,WAOzC,SAAAA,EAA2BlH,EACAU,GADA1H,KAAAgH,GAAAA,EACAhH,KAAA0H,cAAAA,EACzB1H,KAAKgH,GAAKA,EACVhH,KAAK0H,cAAgBA,SAGvBwG,EAAA/L,UAAA6H,SAAA,WAAA,IAAAlJ,EAAAd,KACEA,KAAKoK,KAAKC,UAAYrK,KAEtBA,KAAK8D,OAAOhF,MAAK,WACVgC,EAAKuC,YACRvC,EAAKuC,UAAY,IAAIJ,EAAsBnC,EAAKsJ,MAChDtJ,EAAKuC,UAAUF,iBAAiB9B,WAAU,SAACqD,GACzC5D,EAAK4J,YAGT5J,EAAKwJ,WAII4D,EAAA/L,UAAA2B,KAAA,iJACX,MAAA,CAAA,EAAM9D,KAAK0H,cAActF,KAAK,CAAC+L,SAAU,CAAC,sBAA1C3I,EAAAhG,OAEAQ,KAAKoO,UAAY,IAAIjN,OAAOgD,cAAckK,UACxCrO,KAAKgH,GAAGG,cAAc+C,cAAc,mDAEtB5H,EAAA9B,EAAAR,KAAKoK,KAAKkE,MAAIC,EAAAjM,EAAA7D,+CAAnB+P,EAACD,EAAAhQ,MACNkQ,EAAWD,EAAE,GACbpN,EAASoN,EAAE,GAETC,aAAoB9J,QACxB8J,EAAW,CAACA,IAGRrN,aAAkBuD,QACtBvD,EAAS,CAACA,8CAGIsN,OAAA,EAAAC,EAAAnO,EAAAiO,GAAQG,EAAAD,EAAAlQ,4CACtB,CAAA,GADS5B,EAAC+R,EAAArQ,OACF8L,UAAUwE,qBAAlBrJ,EAAAhG,wOAGciG,OAAA,EAAAqJ,EAAAtO,EAAAY,GAAM2N,EAAAD,EAAArQ,+CACpB,CAAA,GADS5B,EAACkS,EAAAxQ,OACF8L,UAAUvG,gBAElB,GAFA0B,EAAAhG,YAEuBgE,KADjB4G,EAAOvN,EAAEwN,UAAUD,MAChB/G,gBAAkDG,IAAvB4G,EAAKlG,cACvC,MAAM8K,MAAM,iSAKhBhP,KAAKoO,UAAUE,KAAKG,EAASQ,KAAI,SAAA/H,GAAK,OAAAA,EAAEmD,UAAU3B,WAC9BtH,EAAO6N,KAAI,SAAA/H,GAAK,OAAAA,EAAEmD,UAAU3B,wOAI7CwF,EAAA/L,UAAAmI,KAAA,SAAK/L,GACVyB,KAAKqD,UAAUS,KAAKvF,IAGd2P,EAAA/L,UAAAuI,MAAA,WACN1K,KAAKoO,UAAU9D,KAAKtK,KAAKqD,UAAUO,mBApEI,GAEhCrH,EAAA,CAARwR,EAAAA,2FAFUG,EAAAA,+BAA8B3R,EAAA,CAJ1CyR,EAAAA,UAAU,CACT7B,SAAU,0BACV8B,SAAU,uCASqBrB,EAAAA,WACWjM,EAAAA,6BAR/BuN,EAAAA,gCCLAgB,EAAAA,6BAA4B,WAMvC,SAAAA,EAA2BlI,EACAU,GADA1H,KAAAgH,GAAAA,EACAhH,KAAA0H,cAAAA,EACzB1H,KAAKgH,GAAKA,EACVhH,KAAK0H,cAAgBA,SAGvBwH,EAAA/M,UAAA6H,SAAA,WACEhK,KAAKoK,KAAKC,UAAYrK,MAGXkP,EAAA/M,UAAA0M,WAAA,2GACX,OAAI7O,KAAK0I,QACP,CAAA,GAEF,CAAA,EAAM1I,KAAK0H,cAActF,KAAK,CAAC+L,SAAU,CAAC,6BAA1C7L,EAAA9C,QAEA0D,EAAMjG,OAAOsF,OAAOvC,KAAKoK,OACrB+E,YAAcnP,KAAKgH,GAAGG,cAAc+C,cAAc,OACtDlK,KAAK0I,QAAU,IAAIvH,OAAOgD,cAAciL,eAAelM,iBAxBlB,GAE9B3G,EAAA,CAARwR,EAAAA,yFAFUmB,EAAAA,6BAA4B3S,EAAA,CAJxCyR,EAAAA,UAAU,CACT7B,SAAU,wBACV8B,SAAU,uCAQqBrB,EAAAA,WACWjM,EAAAA,6BAP/BuO,EAAAA,8BCDAG,EAAAA,sBAAb,aAAaA,EAAAA,sBAAqB9S,EAAA,CAfjC+S,EAAAA,SAAS,CACNC,aAAc,CACZ9H,EAAAA,qBACAyG,EAAAA,+BACAgB,EAAAA,8BAEFM,UAAW,CACT7O,EAAAA,2BAEF8O,QAAS,CACPhI,EAAAA,qBACAyG,EAAAA,+BACAgB,EAAAA,iCAGOG,EAAAA,uBCHAK,EAAAA,kBAAiB,WAM5B,SAAAA,EAA2BhI,GAAA1H,KAAA0H,cAAAA,SAEbgI,EAAAvN,UAAAwN,aAAA,gHACZ,YAAyBnM,IAArBxD,KAAK4P,YACP,CAAA,GAEF,CAAA,EAAM5P,KAAK0H,cAActF,KAAK,CAAE+L,SAAU,CAAC,gCAA3C7L,EAAA9C,OACAQ,KAAK4P,YAAc,IAAIzO,OAAOgD,cAAc0L,YAC5C1O,OAAOgD,cAAc8I,OAAOO,YAAYxN,KAAK4P,YAAa,MAAM,WAC9D,IAAMlH,EAAU5H,EAAK8O,YAAYE,kBACjChP,EAAKiP,KAAKrH,QAAUA,EACpB5H,EAAKiP,KAAK3F,KAAKK,UAAY/B,EAAQ8B,qBACJhH,IAA3B1C,EAAKiP,KAAK3F,KAAK9E,SAAyBrI,OAAOkN,aAAarJ,EAAKiP,KAAK3F,SACxEtJ,EAAKiP,KAAK3F,KAAK9E,QAAUoD,EAAQsH,cAEnClP,EAAKiP,KAAKrH,QAAQ4B,sBAIToF,EAAAvN,UAAA8N,WAAA,SAAW5C,EAAoD/H,wGAC1E,MAAA,CAAA,EAAMtF,KAAK2P,uBAEX,OAFArN,EAAA9C,OAEA,CAAA,EAAO,IAAIrB,SAAQ,SAACC,EAASC,GAC3ByC,EAAKiP,KA1CX,SAAqB1C,GACnB,YAAmD7J,IAA3C6J,EAA+B3E,QAyCvBwH,CAAY7C,GAASA,EAAQA,EAAMhD,UAC/CvJ,EAAK8O,YAAYK,WAAWnP,EAAKiP,KAAKrH,QAASpD,GAC/CnE,OAAOgD,cAAc8I,OAAOO,YAAY1M,EAAK8O,YAAa,MAAM,WAC9DxR,EAAQ0C,EAAKiP,KAAKrH,YAEpBvH,OAAOgD,cAAc8I,OAAOO,YAAY1M,EAAK8O,YAAa,UAAU,WAClEvR,qBAnCsB,6LAAjBqR,EAAAA,kBAAiBnT,EAAA,CAH7BqG,EAAAA,WAAW,CACVC,WAAY,gCAQ8BlC,EAAAA,6BAN/B+O,EAAAA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","declare var google: any;\n\nimport { Injectable, EventEmitter, LOCALE_ID, Inject, Optional } from '@angular/core';\nimport { GoogleChartsSettings } from './google-charts-interfaces';\n\ninterface InternalGoogleChartsSettings extends GoogleChartsSettings {\n  callback?(): any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleChartsLoaderService {\n\n  private googleScriptLoadingNotifier: EventEmitter<boolean>;\n  private googleScriptIsLoading: boolean;\n  private localeId: string;\n  private loadGoogleChartsScriptPromise: Promise<void>;\n\n  public constructor(\n    @Inject(LOCALE_ID) localeId: string,\n    @Inject('googleChartsSettings') @Optional() private googleChartsSettings?: GoogleChartsSettings,\n  ) {\n    this.googleScriptLoadingNotifier = new EventEmitter();\n    this.googleScriptIsLoading = false;\n    this.localeId = localeId;\n\n    this.loadGoogleChartsScriptPromise = new Promise((resolve, reject) => {\n      if (typeof google !== 'undefined' && google.charts) {\n        resolve();\n      } else if (!this.googleScriptIsLoading) {\n\n        this.googleScriptIsLoading = true;\n\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = 'https://www.gstatic.com/charts/loader.js';\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          this.googleScriptIsLoading = false;\n          this.googleScriptLoadingNotifier.emit(true);\n          resolve();\n        };\n        script.onerror = () => {\n          this.googleScriptIsLoading = false;\n          this.googleScriptLoadingNotifier.emit(false);\n          reject();\n        };\n        document.getElementsByTagName('head')[0].appendChild(script);\n\n      } else {\n        this.googleScriptLoadingNotifier.subscribe((loaded: boolean) => {\n          if (loaded) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      }\n    });\n  }\n\n  public async load(settings?: GoogleChartsSettings): Promise<void> {\n    await this.loadGoogleChartsScriptPromise;\n\n    await new Promise((resolve) => {\n      if (!settings) {\n        settings = Object.create(this.googleChartsSettings);\n      }\n      if (!settings) {\n        settings = {};\n      }\n\n      if (!settings.language) {\n        settings.language = this.localeId;\n      }\n\n      if (!settings.googleChartsVersion) {\n        settings.googleChartsVersion = '47';\n      }\n\n      const _settings: InternalGoogleChartsSettings = settings;\n      _settings.callback = resolve;\n\n      google.charts.load(settings.googleChartsVersion, _settings);\n    });\n  }\n}\n","declare var google: any;\n\nexport interface ArrowFormatInterface {\n  base: number;\n}\n\nexport interface BarFormatInterface {\n  base?: number;\n  colorNegative?: string;\n  colorPositive?: string;\n  drawZeroLine?: boolean;\n  max?: number;\n  min?: number;\n  showValue?: boolean;\n  width?: number;\n}\n\nexport interface RangeInterface {\n  from: number | Date | number[];\n  to: number | Date | number[];\n  color?: string;\n  bgcolor?: string;\n  fromBgColor?: string;\n  toBgColor?: string;\n}\n\nexport interface ColorFormatInterface {\n  ranges?: RangeInterface[];\n}\n\nexport interface DateFormat {\n  formatType?: string;\n  pattern?: string;\n  timeZone?: number;\n}\n\nexport interface NumberFormatInterface {\n  decimalSymbol?: string;\n  fractionDigits?: number;\n  groupingSymbol?: string;\n  negativeColor?: string;\n  negativeParens?: boolean;\n  pattern?: string;\n  prefix?: string;\n  suffix?: string;\n}\n\nexport interface PatternFormatInterface {\n  pattern: string;\n  dstColumnIndex?: number;\n}\n\nexport interface FormatterInterface {\n  type: string;\n  options?: (\n    ArrowFormatInterface\n    | BarFormatInterface\n    | ColorFormatInterface\n    | DateFormat\n    | NumberFormatInterface\n    | PatternFormatInterface\n  );\n  columns: number[];\n}\n\nexport interface GoogleChartsDataTableInterface {\n  dataTable?: any;\n  firstRowIsData?: boolean;\n  query?: string;\n  dataSourceUrl?: string;\n\n  /** Refresh interval, in seconds, when using remote data source. */\n  refreshInterval?: number;\n\n  /** Timeout in seconds, when using remote data source */\n  timeout?: number;\n\n  /** Called after query executed. DataTable is updated automatically.\n   * @param queryResponse google.visualization.QueryResponse\n   */\n  queryCallback?: (queryResponse: any) => any;\n\n  formatters?: FormatterInterface[];\n  view?: string | object | object[];\n}\n\nimport {\n  EventEmitter,\n  Output,\n} from '@angular/core';\n\nexport class GoogleChartsDataTable {\n  private dataTable: any;\n  public query: any;\n  public tid: any;\n\n  @Output() dataTableChanged: EventEmitter<any> = new EventEmitter();\n\n  constructor(private opt: GoogleChartsDataTableInterface) {\n    if (opt) {\n      this._setDataTable(opt.dataTable, opt.firstRowIsData);\n    }\n  }\n\n  private send() {\n    if (this.query === undefined) {\n      return;\n    }\n    this.query.send((queryResponse: any) => {\n      this.setDataTable(queryResponse.getDataTable());\n      if (this.opt.queryCallback) {\n        this.opt.queryCallback(queryResponse);\n      }\n    });\n  }\n\n  public init(opt?: GoogleChartsDataTableInterface) {\n    if (opt) {\n      this.opt = opt;\n    }\n\n    if (this.tid !== undefined) {\n      // doesn't work, see https://github.com/google/google-visualization-issues/issues/2381\n      // this.query.abort();\n      window.clearInterval(this.tid);\n      this.tid = undefined;\n    }\n\n    if (this.opt.dataSourceUrl) {\n      this.query = new google.visualization.Query(this.opt.dataSourceUrl);\n      if (this.opt.query) {\n        this.query.setQuery(this.opt.query);\n      }\n      if (this.opt.timeout !== undefined) {\n        this.query.setTimeout(this.opt.timeout);\n      }\n      if (this.opt.refreshInterval) {\n        // this.query.setRefreshInterval(this.opt.refreshInterval);\n        this.tid = window.setInterval(() => {\n          this.send();\n        }, this.opt.refreshInterval * 1000);\n      }\n      this.send();\n    } else {\n      this.setDataTable(this.opt.dataTable);\n    }\n  }\n\n  /**\n   * @returns Underlying google.visualization.DataTable\n   */\n\n  public getDataTable() {\n    return this.dataTable;\n  }\n\n  public setDataTable(dt: any, firstRowIsData?: boolean) {\n    if (firstRowIsData === undefined) {\n      firstRowIsData = this.opt.firstRowIsData;\n    }\n    this._setDataTable(dt, firstRowIsData);\n    this.dataTableChanged.emit(this.dataTable);\n  }\n\n  private _setDataTable(dt: any, firstRowIsData?: boolean) {\n    if (Array.isArray(dt)) {\n      dt = google.visualization.arrayToDataTable(dt, firstRowIsData);\n    }\n    this.dataTable = dt;\n    this.reformat();\n  }\n\n  /**\n   * Applies formatters to data columns, if defined\n   */\n\n  public reformat() {\n    const dt = this.dataTable;\n    if (dt === undefined) {\n      return;\n    }\n\n    if (this.opt.formatters === undefined) {\n      return;\n    }\n\n    for (const formatterConfig of this.opt.formatters) {\n      let formatter: any;\n      if (formatterConfig.type === 'PatternFormat') {\n        const fmtOptions = formatterConfig.options as PatternFormatInterface;\n        formatter = new google.visualization.PatternFormat(fmtOptions.pattern);\n        formatter.format(dt, formatterConfig.columns, fmtOptions.dstColumnIndex);\n        continue;\n      }\n\n      const formatterConstructor = google.visualization[formatterConfig.type];\n      const formatterOptions = formatterConfig.options;\n      formatter = new formatterConstructor(formatterOptions);\n      if (formatterConfig.type === 'ColorFormat' && formatterOptions) {\n        const fmtOptions = formatterOptions as ColorFormatInterface;\n        for (const range of fmtOptions.ranges) {\n          if (typeof (range.fromBgColor) !== 'undefined'\n              && typeof (range.toBgColor) !== 'undefined') {\n            formatter.addGradientRange(range.from, range.to,\n              range.color, range.fromBgColor, range.toBgColor);\n          } else {\n            formatter.addRange(range.from, range.to, range.color, range.bgcolor);\n          }\n        }\n      }\n\n      for (const col of formatterConfig.columns) {\n        formatter.format(dt, col);\n      }\n    }\n  }\n}\n","\nimport { ElementRef } from '@angular/core';\n\nexport class ChartHTMLTooltip {\n\n  public static readonly PIXELS: string = 'px';\n\n  public constructor(private el: ElementRef) {}\n\n  public setPosition(x: number, y: number): void {\n    this.el.nativeElement.style.left = x + ChartHTMLTooltip.PIXELS;\n    this.el.nativeElement.style.top = y + ChartHTMLTooltip.PIXELS;\n  }\n\n  public getDOMElement(): ElementRef {\n    return this.el;\n  }\n\n}\n","declare var google: any;\n\nimport {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { GoogleChartsLoaderService } from '../google-charts-loader.service';\nimport { GoogleChartsDataTable, GoogleChartsDataTableInterface } from '../google-charts-datatable';\nimport { ChartReadyEvent } from './chart-ready-event';\nimport { ChartErrorEvent } from './chart-error-event';\nimport { ChartSelectEvent } from './chart-select-event';\nimport {\n  ChartMouseEvent,\n  ChartMouseOverEvent,\n  ChartMouseOutEvent,\n  BoundingBox,\n  DataPointPosition\n} from './chart-mouse-event';\nimport { ChartHTMLTooltip } from './chart-html-tooltip';\nimport { RegionClickEvent } from './geochart-events';\n\nexport interface GoogleChartInterface extends GoogleChartsDataTableInterface {\n  chartType: string;\n  options?: any;\n\n  component?: GoogleChartComponent;\n}\n\n@Component({\n  selector: 'google-chart',\n  template: '<div></div>',\n})\nexport class GoogleChartComponent implements OnInit {\n\n  @Input() public data: GoogleChartInterface;\n\n  @Output() public chartReady: EventEmitter<ChartReadyEvent>;\n  @Output() public chartReadyOneTime: EventEmitter<ChartReadyEvent>;\n\n  @Output() public chartError: EventEmitter<ChartErrorEvent>;\n  @Output() public chartErrorOneTime: EventEmitter<ChartErrorEvent>;\n\n  @Output() public chartSelect: EventEmitter<ChartSelectEvent>;\n  @Output() public chartSelectOneTime: EventEmitter<ChartSelectEvent>;\n\n  @Output() public mouseOver: EventEmitter<ChartMouseOverEvent>;\n  @Output() public mouseOverOneTime: EventEmitter<ChartMouseOverEvent>;\n\n  @Output() public mouseOut: EventEmitter<ChartMouseOutEvent>;\n  @Output() public mouseOutOneTime: EventEmitter<ChartMouseOutEvent>;\n\n  @Output() public regionClick: EventEmitter<RegionClickEvent>;\n  @Output() public regionClickOneTime: EventEmitter<RegionClickEvent>;\n\n  public wrapper: any;\n  private cli: any;\n  private options: any;\n\n  private HTMLel: HTMLElement;\n  private dataTable: GoogleChartsDataTable;\n\n  public constructor(private el: ElementRef,\n                     private loaderService: GoogleChartsLoaderService) {\n    this.chartSelect = new EventEmitter();\n    this.chartSelectOneTime = new EventEmitter();\n    this.chartReady = new EventEmitter();\n    this.chartReadyOneTime = new EventEmitter();\n    this.chartError = new EventEmitter();\n    this.chartErrorOneTime = new EventEmitter();\n    this.mouseOver = new EventEmitter();\n    this.mouseOverOneTime = new EventEmitter();\n    this.mouseOut = new EventEmitter();\n    this.mouseOutOneTime = new EventEmitter();\n    this.regionClick = new EventEmitter();\n    this.regionClickOneTime = new EventEmitter();\n  }\n\n  public ngOnInit(): void {\n    this.HTMLel = this.el.nativeElement.querySelector('div');\n    if (Object.isExtensible(this.data)) {\n      this.data.component = this;\n    }\n    this.options = this.data.options;\n\n    this.init().then(() => {\n      this.draw();\n    });\n  }\n\n  public async init() {\n    await this.loaderService.load();\n    this.recreateWrapper();\n  }\n\n  private recreateWrapper() {\n    if (this.wrapper === undefined || this.wrapper.getChartType() !== this.data.chartType) {\n      this.dataTable = new GoogleChartsDataTable(this.data);\n      this.dataTable.dataTableChanged.subscribe((dt: any) => {\n        this._draw();\n      });\n\n      // see dataTable in https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\n      let temp: GoogleChartInterface = this.data;\n      if (this.data.firstRowIsData) {\n        temp = Object.assign(temp, this.data);\n        temp.dataTable = this.dataTable.getDataTable();\n      }\n      this.wrapper = new google.visualization.ChartWrapper(temp);\n      this.registerChartWrapperEvents();\n\n      /* Calling draw even without data is the only way to pass the HTMl element\n         when using the chart in a dashboard. Don't do this in all other cases:\n         it breaks formatters with remote data source, hence the conditional. */\n      if (temp.dataTable === undefined && temp.dataSourceUrl === undefined) {\n        try {\n          this.wrapper.draw(this.HTMLel);\n        } catch (err) {}\n      }\n    }\n  }\n\n  private async _draw() {\n    const dt = this.dataTable.getDataTable();\n    if (dt === undefined) {\n      return;\n    }\n    this.convertOptions();\n    this.recreateWrapper();\n    this.wrapper.setOptions(this.options);\n    this.wrapper.setDataTable(dt);\n    this.wrapper.draw(this.HTMLel);\n  }\n\n  public getDataTable(): GoogleChartsDataTable {\n    return this.dataTable;\n  }\n\n  public draw(value?: GoogleChartInterface) {\n    if (value === undefined) {\n      value = this.data;\n    }\n    this.options = value.options;\n    this.dataTable.init(value);\n  }\n\n  private getSelectorBySeriesType(seriesType: string): string {\n    const selectors: any = {\n      bars : 'bar#%s#%r',\n      haxis : 'hAxis#0#label',\n      line: 'point#%s#%r',\n      legend : 'legendentry#%s',\n      area: 'point#%s#%r'\n    };\n\n    const selector: string = selectors[seriesType];\n\n    return selector;\n  }\n\n /**\n  * Given a column number, counts how many\n  * columns have rol==\"data\". Those are mapped\n  * one-to-one to the series array. When rol is not defined\n  * a column of type number means a series column.\n  * @param column to inspect\n  */\n  private getSeriesByColumn(column: number): number  {\n    let series = 0;\n    const dataTable = this.wrapper.getDataTable();\n    for (let i = column - 1; i >= 0; i--) {\n      const role = dataTable.getColumnRole(i);\n      const type = dataTable.getColumnType(i);\n      if (role === 'data' || type === 'number') {\n        series++;\n      }\n    }\n    return series;\n  }\n\n  private getBoundingBoxForItem(item: DataPointPosition): BoundingBox {\n    let boundingBox = {top: 0, left: 0, width: 0, height: 0};\n    if (this.cli) {\n      const column = item.column;\n      const series = this.getSeriesByColumn(column);\n      const row = item.row;\n      let seriesType = this.options.seriesType;\n      if (this.options.series && this.options.series[series] && this.options.series[series].type) {\n        seriesType = this.options.series[series].type;\n      }\n      if (seriesType) {\n        let selector = this.getSelectorBySeriesType(seriesType);\n        if (selector) {\n             selector = selector.replace('%s', series + '').replace('%c', column + '').replace('%r', row + '');\n             const box = this.cli.getBoundingBox(selector);\n             if (box) {\n              boundingBox = box;\n             }\n        }\n      }\n    }\n\n    return boundingBox;\n  }\n\n  private getValueAtPosition(position: DataPointPosition): any {\n    if (position.row == null) {\n      return null;\n    }\n    const dataTable = this.wrapper.getDataTable();\n    const value = dataTable.getValue(position.row, position.column);\n    return value;\n  }\n\n  private getColumnTypeAtPosition(position: DataPointPosition): string {\n      const dataTable = this.wrapper.getDataTable();\n      const type = dataTable.getColumnType(position.column) || '';\n      return type;\n  }\n\n  private getColumnLabelAtPosition(position: DataPointPosition): string {\n      const dataTable = this.wrapper.getDataTable();\n      const type = dataTable.getColumnLabel(position.column) || '';\n      return type;\n  }\n\n  private getHTMLTooltip(): ChartHTMLTooltip {\n    const tooltipER = new ElementRef(this.el.nativeElement.querySelector('.google-visualization-tooltip'));\n    return new ChartHTMLTooltip(tooltipER);\n  }\n\n  private parseMouseEvent(item: DataPointPosition): ChartMouseEvent {\n    const chartType = this.wrapper.getChartType();\n    let eventColumn = item.column;\n    if (eventColumn == null) {\n      switch (chartType) {\n        case 'Timeline':\n          eventColumn = this.wrapper.getDataTable().getNumberOfColumns() === 3 ? 0 : 1;\n          break;\n        default:\n          eventColumn = 0;\n      }\n    }\n    const eventRow = item.row;\n    const myItem = {\n      row: eventRow,\n      column: eventColumn\n    };\n    const event = {\n      position: item,\n      boundingBox: this.getBoundingBoxForItem(myItem),\n      value: this.getValueAtPosition(myItem),\n      columnType: this.getColumnTypeAtPosition(myItem),\n      columnLabel: this.getColumnLabelAtPosition(myItem)\n    };\n    return event;\n  }\n\n  private unregisterEvents(): void {\n    google.visualization.events.removeAllListeners(this.wrapper.getChart());\n    google.visualization.events.removeAllListeners(this.wrapper);\n  }\n\n  private registerChartEvents(): void {\n    const chart = this.wrapper.getChart();\n    this.cli = chart.getChartLayoutInterface ? chart.getChartLayoutInterface() : null;\n    if (this.mouseOver.observers.length > 0) {\n      google.visualization.events.addListener(chart, 'onmouseover', (item: DataPointPosition) => {\n        const event: ChartMouseOverEvent = this.parseMouseEvent(item) as ChartMouseOverEvent;\n        event.tooltip = this.getHTMLTooltip();\n        this.mouseOver.emit(event);\n      });\n    }\n    if (this.mouseOverOneTime.observers.length > 0) {\n      google.visualization.events.addOneTimeListener(chart, 'onmouseover', (item: DataPointPosition) => {\n        const event: ChartMouseOverEvent = this.parseMouseEvent(item) as ChartMouseOverEvent;\n        event.tooltip = this.getHTMLTooltip();\n        this.mouseOverOneTime.emit(event);\n      });\n    }\n\n    if (this.mouseOut.observers.length > 0) {\n      google.visualization.events.addListener(chart, 'onmouseout', (item: DataPointPosition) => {\n        const event: ChartMouseOutEvent = this.parseMouseEvent(item) as ChartMouseOutEvent;\n        this.mouseOut.emit(event);\n      });\n    }\n\n    if (this.mouseOutOneTime.observers.length > 0) {\n      google.visualization.events.addOneTimeListener(chart, 'onmouseout', (item: DataPointPosition) => {\n        const event: ChartMouseOutEvent = this.parseMouseEvent(item) as ChartMouseOutEvent;\n        this.mouseOutOneTime.emit(event);\n      });\n    }\n\n    if (this.data.chartType === 'GeoChart') {\n      if (this.regionClick.observers.length > 0) {\n        google.visualization.events.addListener(chart, 'regionClick', (item: RegionClickEvent) => {\n          this.regionClick.emit(item);\n        });\n      }\n      if (this.regionClickOneTime.observers.length > 0) {\n        google.visualization.events.addOneTimeListener(chart, 'regionClick', (item: RegionClickEvent) => {\n          this.regionClick.emit(item);\n        });\n      }\n    }\n  }\n\n  private registerChartWrapperEvents(): void {\n    google.visualization.events.addListener(this.wrapper, 'ready', () => {\n      this.chartReady.emit({message: 'Chart ready'});\n    });\n\n    google.visualization.events.addOneTimeListener(this.wrapper, 'ready', () => {\n      this.chartReadyOneTime.emit({message: 'Chart ready (one time)'});\n      this.registerChartEvents();\n    });\n\n    google.visualization.events.addListener(this.wrapper, 'error', (error: any) => {\n      this.chartError.emit(error as ChartErrorEvent);\n    });\n\n    google.visualization.events.addOneTimeListener(this.wrapper, 'error', (error: any) => {\n      this.chartErrorOneTime.emit(error as ChartErrorEvent);\n    });\n\n    this.addListener(this.wrapper, 'select', this.selectListener, this.chartSelect);\n    this.addOneTimeListener(this.wrapper, 'select', this.selectListener, this.chartSelectOneTime);\n  }\n\n  private addListener(source: any, eventType: string, listenerFn: any, evEmitter: EventEmitter<any>) {\n    google.visualization.events.addListener(source, eventType, () => {\n      evEmitter.emit(listenerFn());\n    });\n  }\n\n  private addOneTimeListener(source: any, eventType: string, listenerFn: any, evEmitter: EventEmitter<any>) {\n    google.visualization.events.addOneTimeListener(source, eventType, () => {\n      evEmitter.emit(listenerFn());\n    });\n  }\n\n  private mouseOverListener = (item: DataPointPosition) => {\n    const event: ChartMouseOverEvent = this.parseMouseEvent(item) as ChartMouseOverEvent;\n    event.tooltip = this.getHTMLTooltip();\n    return event;\n  }\n\n  private mouseOutListener = (item: DataPointPosition) => {\n    const event: ChartMouseOutEvent = this.parseMouseEvent(item) as ChartMouseOutEvent;\n    return event;\n  }\n\n  private selectListener = () => {\n    const event: ChartSelectEvent = {\n      message: 'select',\n      row: null,\n      column: null,\n      selectedRowValues: [],\n      selectedRowFormattedValues: [],\n      columnLabel: ''\n    };\n    const s = this.wrapper.visualization.getSelection();\n    const gs = s[s.length - 1];\n    if (!gs) {\n      event.message = 'deselect';\n      return event;\n    }\n    const selection: DataPointPosition = gs;\n    if (gs.row != null) {\n      event.row = selection.row;\n\n      const selectedRowValues = [];\n      const selectedRowFormattedValues = [];\n      const dataTable = this.wrapper.getDataTable();\n      const numberOfColumns = dataTable.getNumberOfColumns();\n      for (let i = 0; i < numberOfColumns; i++) {\n        selectedRowValues.push(dataTable.getValue(selection.row, i));\n        selectedRowFormattedValues.push(dataTable.getFormattedValue(selection.row, i));\n      }\n      event.selectedRowValues = selectedRowValues;\n      event.selectedRowFormattedValues = selectedRowFormattedValues;\n    }\n    if (selection.column != null) {\n      event.column = selection.column;\n      event.columnLabel = this.getColumnLabelAtPosition(selection);\n    }\n    if (gs.name) {\n      event.columnLabel = gs.name;\n    }\n\n    return event;\n  }\n\n  private convertOptions() {\n    try {\n      this.options = google.charts[this.data.chartType].convertOptions(this.options);\n    } catch (error) {\n      return;\n    }\n  }\n}\n","declare var google: any;\n\nimport {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n} from '@angular/core';\n\nimport { GoogleChartsLoaderService } from '../google-charts-loader.service';\nimport { GoogleChartsDataTableInterface } from '../google-charts-datatable';\nimport { GoogleChartsControlInterface } from '../google-charts-control/google-charts-control.component';\nimport { GoogleChartInterface } from '../google-chart/google-chart.component';\nimport { GoogleChartsDataTable } from '../google-charts-datatable';\n\nexport interface GoogleChartsDashboardInterface extends\n GoogleChartsDataTableInterface {\n  bind: [\n    GoogleChartsControlInterface | GoogleChartsControlInterface[],\n    GoogleChartInterface | GoogleChartInterface[]\n  ][];\n  component?: GoogleChartsDashboardComponent;\n}\n\n@Component({\n  selector: 'google-charts-dashboard',\n  template: '<div></div>',\n})\nexport class GoogleChartsDashboardComponent implements OnInit {\n\n  @Input() public data: GoogleChartsDashboardInterface;\n\n  public dashboard: any;\n  public dataTable: GoogleChartsDataTable;\n\n  public constructor(private el: ElementRef,\n                     private loaderService: GoogleChartsLoaderService) {\n    this.el = el;\n    this.loaderService = loaderService;\n  }\n\n  ngOnInit() {\n    this.data.component = this;\n\n    this.init().then(() => {\n      if (!this.dataTable) {\n        this.dataTable = new GoogleChartsDataTable(this.data);\n        this.dataTable.dataTableChanged.subscribe((dt: any) => {\n          this._draw();\n        });\n      }\n      this.draw();\n    });\n  }\n\n  public async init() {\n    await this.loaderService.load({packages: ['controls'] });\n\n    this.dashboard = new google.visualization.Dashboard(\n      this.el.nativeElement.querySelector('div'));\n\n    for (const b of this.data.bind) {\n      let controls = b[0];\n      let charts = b[1];\n\n      if (!(controls instanceof Array)) {\n        controls = [controls];\n      }\n\n      if (!(charts instanceof Array)) {\n        charts = [charts];\n      }\n\n      for (const c of controls) {\n        await c.component.ensureInit();\n      }\n\n      for (const c of charts) {\n        await c.component.init();\n        const data = c.component.data;\n        if (data.dataTable !== undefined || data.dataSourceUrl !== undefined) {\n          throw Error('dataTable and dataSourceUrl cannot be specified when ' +\n                      'chart is drawn in a Dashboard');\n        }\n      }\n\n      this.dashboard.bind(controls.map(x => x.component.wrapper),\n                          charts.map(x => x.component.wrapper));\n    }\n  }\n\n  public draw(value?: GoogleChartInterface) {\n    this.dataTable.init(value);\n  }\n\n  private _draw() {\n    this.dashboard.draw(this.dataTable.getDataTable());\n  }\n}\n","declare var google: any;\n\nexport interface GoogleChartsControlInterface {\n  controlType: string;\n  options?: object;\n  state?: object;\n  component?: GoogleChartsControlComponent;\n}\n\nimport {\n  Component, OnInit, Input,\n  ElementRef\n} from '@angular/core';\n\nimport { GoogleChartsLoaderService } from '../google-charts-loader.service';\n\ninterface InternalGoogleChartsControlOptions extends GoogleChartsControlInterface {\n  containerId: string;\n}\n@Component({\n  selector: 'google-charts-control',\n  template: '<div></div>',\n})\nexport class GoogleChartsControlComponent implements OnInit {\n\n  @Input() public data: GoogleChartsControlInterface;\n\n  public wrapper: any;\n\n  public constructor(private el: ElementRef,\n                     private loaderService: GoogleChartsLoaderService) {\n    this.el = el;\n    this.loaderService = loaderService;\n  }\n\n  ngOnInit() {\n    this.data.component = this;\n  }\n\n  public async ensureInit() {\n    if (this.wrapper) {\n      return;\n    }\n    await this.loaderService.load({packages: ['controls'] });\n    let opt: InternalGoogleChartsControlOptions;\n    opt = Object.create(this.data);\n    opt.containerId = this.el.nativeElement.querySelector('div');\n    this.wrapper = new google.visualization.ControlWrapper(opt);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { GoogleChartComponent } from './google-chart/google-chart.component';\nimport { GoogleChartsLoaderService } from './google-charts-loader.service';\nimport { GoogleChartsDashboardComponent } from './google-charts-dashboard/google-charts-dashboard.component';\nimport { GoogleChartsControlComponent } from './google-charts-control/google-charts-control.component';\n\n@NgModule({\n    declarations: [\n      GoogleChartComponent,\n      GoogleChartsDashboardComponent,\n      GoogleChartsControlComponent,\n    ],\n    providers: [\n      GoogleChartsLoaderService\n    ],\n    exports: [\n      GoogleChartComponent,\n      GoogleChartsDashboardComponent,\n      GoogleChartsControlComponent,\n    ]\n})\nexport class Ng2GoogleChartsModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { GoogleChartsLoaderService } from './google-charts-loader.service';\nimport { GoogleChartComponent, GoogleChartInterface } from './google-chart/google-chart.component';\nimport { GoogleChartWrapper } from './google-charts-interfaces';\n\nfunction isComponent(chart: GoogleChartComponent | GoogleChartInterface): chart is GoogleChartComponent {\n  return (chart as GoogleChartComponent).wrapper !== undefined;\n}\n\ndeclare var google: any;\n\nexport interface GoogleChartEditorOptions {\n  dataSourceInput?: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleChartEditor {\n\n  chartEditor: any;\n\n  private comp: GoogleChartComponent;\n\n  public constructor(private loaderService: GoogleChartsLoaderService){}\n\n  private async createEditor() {\n    if (this.chartEditor !== undefined) {\n      return;\n    }\n    await this.loaderService.load({ packages: ['charteditor'] });\n    this.chartEditor = new google.visualization.ChartEditor();\n    google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n      const wrapper = this.chartEditor.getChartWrapper();\n      this.comp.wrapper = wrapper;\n      this.comp.data.chartType = wrapper.getChartType();\n      if (this.comp.data.options !== undefined || Object.isExtensible(this.comp.data)) {\n        this.comp.data.options = wrapper.getOptions();\n      }\n      this.comp.wrapper.draw();\n    });\n  }\n\n  public async openDialog(chart: GoogleChartComponent | GoogleChartInterface, options?: GoogleChartEditorOptions): Promise<GoogleChartWrapper | any> {\n    await this.createEditor();\n\n    return new Promise((resolve, reject) => {\n      this.comp = isComponent(chart) ? chart : chart.component;\n      this.chartEditor.openDialog(this.comp.wrapper, options);\n      google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n        resolve(this.comp.wrapper);\n      });\n      google.visualization.events.addListener(this.chartEditor, 'cancel', () => {\n        reject();\n      });\n    });\n  }\n\n}\n"]}