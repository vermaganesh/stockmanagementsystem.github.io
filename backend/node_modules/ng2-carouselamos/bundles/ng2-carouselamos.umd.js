(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('lodash.isequal'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ng2-carouselamos', ['exports', '@angular/core', 'lodash.isequal', '@angular/common'], factory) :
    (global = global || self, factory(global['ng2-carouselamos'] = {}, global.ng.core, global.isEqual, global.ng.common));
}(this, (function (exports, core, isEqual, common) { 'use strict';

    isEqual = isEqual && isEqual.hasOwnProperty('default') ? isEqual['default'] : isEqual;

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ng2-carouselamos.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @record
     */
    function SelectedItemInterface() { }
    if (false) {
        /** @type {?} */
        SelectedItemInterface.prototype.item;
        /** @type {?} */
        SelectedItemInterface.prototype.index;
        /** @type {?} */
        SelectedItemInterface.prototype.first;
    }
    var Ng2CarouselamosComponent = /** @class */ (function () {
        function Ng2CarouselamosComponent() {
            this.childIndex = 0;
            this.amount = 0;
            this.startPress = 0;
            this.lastX = 0;
            this.startAt = 0;
            this.items = [];
            this.width = 500;
            this.onSelectedItem = new core.EventEmitter();
        }
        /**
         * @param {?} e
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.onMousedown = /**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (e.which === 1) {
                this.startPress = e.clientX;
                this.lastX = this.amount;
            }
        };
        /**
         * @param {?} e
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.onTouchdown = /**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (navigator.userAgent.indexOf("Android") >= 0)
                e.preventDefault();
            this.startPress = e.targetTouches[0].clientX;
            this.lastX = this.amount;
        };
        /**
         * @param {?} e
         * @param {?} maxWidth
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.onMousemove = /**
         * @param {?} e
         * @param {?} maxWidth
         * @return {?}
         */
        function (e, maxWidth) {
            if (e.which === 1) {
                /** @type {?} */
                var amount = this.lastX - (this.startPress - e.clientX);
                if (amount > 0 || amount < -(maxWidth - this.width))
                    return;
                this.amount = amount;
            }
        };
        /**
         * @param {?} e
         * @param {?} maxWidth
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.onTouchmove = /**
         * @param {?} e
         * @param {?} maxWidth
         * @return {?}
         */
        function (e, maxWidth) {
            if (navigator.userAgent.indexOf("Android") >= 0)
                e.preventDefault();
            /** @type {?} */
            var amount = this.lastX - (this.startPress - e.targetTouches[0].clientX);
            if (amount > 0 || amount < -(maxWidth - this.width))
                return;
            this.amount = amount;
        };
        /**
         * @param {?} e
         * @param {?} elem
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.onMouseup = /**
         * @param {?} e
         * @param {?} elem
         * @return {?}
         */
        function (e, elem) {
            if (e.which === 1) {
                this.startPress = 0;
                this.snap(elem);
            }
        };
        /**
         * @param {?} e
         * @param {?} elem
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.onTouchup = /**
         * @param {?} e
         * @param {?} elem
         * @return {?}
         */
        function (e, elem) {
            if (navigator.userAgent.indexOf("Android") >= 0)
                e.preventDefault();
            this.startPress = 0;
            this.snap(elem);
        };
        /**
         * @param {?} elem
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.snap = /**
         * @param {?} elem
         * @return {?}
         */
        function (elem) {
            /** @type {?} */
            var counter = 0;
            /** @type {?} */
            var lastVal = 0;
            for (var i = 0; i < this.items.length; i++) {
                /** @type {?} */
                var el = elem.children[i];
                /** @type {?} */
                var style = el.currentStyle || window.getComputedStyle(el);
                counter +=
                    el.offsetWidth +
                        (parseFloat(style.marginLeft) + parseFloat(style.marginRight));
                if (this.amount <= lastVal && this.amount >= -counter) {
                    this.amount = -lastVal;
                    this.childIndex = i;
                    this.onSelectedItem.emit({
                        item: this.items[this.childIndex],
                        index: this.childIndex,
                        first: false
                    });
                    return;
                }
                lastVal = counter;
            }
            return counter;
        };
        /**
         * @param {?} forward
         * @param {?} elem
         * @param {?=} qty
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.scroll = /**
         * @param {?} forward
         * @param {?} elem
         * @param {?=} qty
         * @return {?}
         */
        function (forward, elem, qty) {
            if (qty === void 0) { qty = 1; }
            this.childIndex += forward ? qty : -qty;
            this.onSelectedItem.emit({
                item: this.items[this.childIndex],
                index: this.childIndex,
                first: false
            });
            this.amount = -this.calcScroll(elem);
        };
        /**
         * @param {?} elem
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.calcScroll = /**
         * @param {?} elem
         * @return {?}
         */
        function (elem) {
            /** @type {?} */
            var counter = 0;
            for (var i = this.childIndex - 1; i >= 0; i--) {
                /** @type {?} */
                var el = elem.children[i];
                /** @type {?} */
                var style = el.currentStyle || window.getComputedStyle(el);
                counter +=
                    el.offsetWidth +
                        (parseFloat(style.marginLeft) + parseFloat(style.marginRight));
            }
            return counter;
        };
        /**
         * @param {?} changes
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
        function (changes) {
            if (changes.items &&
                !isEqual(changes.items.previousValue, changes.items.currentValue)) {
                if (changes.items.firstChange) {
                    this.onSelectedItem.emit({
                        item: this.items[this.childIndex],
                        index: this.childIndex,
                        first: true
                    });
                }
                this.amount = 0;
            }
        };
        /**
         * @return {?}
         */
        Ng2CarouselamosComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.startPress = 1;
            this.scroll(true, this.list.nativeElement, this.startAt);
            setTimeout((/**
             * @return {?}
             */
            function () { return (_this.startPress = 0); }));
        };
        Ng2CarouselamosComponent.decorators = [
            { type: core.Component, args: [{
                        selector: "[ng2-carouselamos]",
                        template: "<div class=\"ng2-carouselamos-container\">\n  <div\n    class=\"ng2-carouselamos-wrapper\"\n    [style.width]=\"width + 'px'\"\n    (mousedown)=\"onMousedown($event)\"\n    (touchstart)=\"onTouchdown($event)\"\n    (mousemove)=\"onMousemove($event, list.scrollWidth)\"\n    (touchmove)=\"onTouchmove($event, list.scrollWidth)\"\n    (mouseup)=\"onMouseup($event, list)\"\n    (mouseleave)=\"onMouseup($event, list)\"\n    (touchend)=\"onTouchup($event, list)\"\n  >\n    <div\n      class=\"ng2-carouselamos\"\n      [attr.startPress]=\"startPress\"\n      [style.transition]=\"startPress > 0 ? 'none' : '-webkit-transform 1s'\"\n      [style.webkitTransition]=\"\n        startPress > 0 ? 'none' : '-webkit-transform 1s'\n      \"\n      [style.transform]=\"'translateX(' + amount + 'px)'\"\n      [style.webkitTransform]=\"'translateX(' + amount + 'px)'\"\n      #list\n    >\n      <ng-template\n        *ngFor=\"let item of items; let i = index\"\n        [ngTemplateOutlet]=\"$item\"\n        [ngTemplateOutletContext]=\"{\n          $implicit: item,\n          index: i,\n          selectedIndex: childIndex\n        }\"\n      ></ng-template>\n    </div>\n  </div>\n  <div class=\"controls\" *ngIf=\"$prev || $next\">\n    <button\n      type=\"button\"\n      *ngIf=\"$prev\"\n      (click)=\"scroll(false, list)\"\n      [disabled]=\"amount >= 0\"\n    >\n      <ng-template [ngTemplateOutlet]=\"$prev\"></ng-template>\n    </button>\n    <button\n      type=\"button\"\n      *ngIf=\"$next\"\n      (click)=\"scroll(true, list)\"\n      [disabled]=\"amount <= -(list.scrollWidth - width)\"\n    >\n      <ng-template [ngTemplateOutlet]=\"$next\"></ng-template>\n    </button>\n  </div>\n</div>\n",
                        styles: [".ng2-carouselamos-container{position:relative;display:flex;justify-content:center}.ng2-carouselamos-wrapper{overflow:hidden}.ng2-carouselamos{display:flex;transition:transform 1s}.controls{pointer-events:none;position:absolute;display:flex;width:100%;justify-content:space-between;top:50%;left:0;transform:translateY(-50%)}.controls button{pointer-events:all;background:0 0;border:0}"]
                    }] }
        ];
        Ng2CarouselamosComponent.propDecorators = {
            startAt: [{ type: core.Input }],
            items: [{ type: core.Input }],
            width: [{ type: core.Input }],
            $prev: [{ type: core.Input }],
            $next: [{ type: core.Input }],
            $item: [{ type: core.Input }],
            onSelectedItem: [{ type: core.Output }],
            list: [{ type: core.ViewChild, args: ["list", { static: true },] }]
        };
        return Ng2CarouselamosComponent;
    }());
    if (false) {
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.childIndex;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.amount;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.startPress;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.lastX;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.startAt;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.items;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.width;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.$prev;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.$next;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.$item;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.onSelectedItem;
        /** @type {?} */
        Ng2CarouselamosComponent.prototype.list;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ng2-carouselamos.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Ng2CarouselamosModule = /** @class */ (function () {
        function Ng2CarouselamosModule() {
        }
        Ng2CarouselamosModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [Ng2CarouselamosComponent],
                        imports: [common.CommonModule],
                        exports: [Ng2CarouselamosComponent]
                    },] }
        ];
        return Ng2CarouselamosModule;
    }());

    exports.Ng2CarouselamosComponent = Ng2CarouselamosComponent;
    exports.Ng2CarouselamosModule = Ng2CarouselamosModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng2-carouselamos.umd.js.map
